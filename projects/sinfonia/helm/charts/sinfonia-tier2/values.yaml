# Default values for sinfonia-tier2.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

sinfoniaTier1Url: "http://localhost:5000"
sinfoniaTier2Url: "http://localhost:5001"

sinfoniaTier2Latitude: "42.3672"
sinfoniaTier2Longitude: "-72.5185"
# sinfoniaTier2Latitude: "a"
# sinfoniaTier2Longitude: "b"
sinfoniaTier2Zone: "CA-ON"

sinfoniaRecipes: "RECIPES"
imageCredentials: ""
 
replicaCount: 1

image:
  repository: k2nt/sinfonia-tier2
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 44

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Should we deploy a minio instance to store helm charts
# probably needs more configuration...
minio:
  enabled: false
  mode: standalone
  replicas: 1
  persistence:
    enabled: false
  buckets:
    - name: recipes
      policy: none
      purge: false

rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5001
  targetPort: 5001
  nodePort: 30051

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: api/v1/livez
    port: 5001
  initialDelaySeconds: 5
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: api/v1/readyz
    port: 5001
  initialDelaySeconds: 5
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
